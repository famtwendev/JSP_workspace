/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-03-29 17:11:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.KhachHang;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.KhachHang;
import database.KhachHangDAO;

public final class forgotpass_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("model.KhachHang");
    _jspx_imports_classes.add("database.KhachHangDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<!-- MDB icon -->\r\n");
      out.write("<link rel=\"icon\" href=\"img/mdb-favicon.ico\" type=\"image/x-icon\" />\r\n");
      out.write("<!-- Font Awesome -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" />\r\n");
      out.write("<!-- Google Fonts Roboto -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap\" />\r\n");
      out.write("\r\n");
      out.write("<title>Fam Twen | Quên mật khẩu</title>\r\n");

String url = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
		+ request.getContextPath();

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(url);
      out.write("/css/mdb.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	Object objKH = session.getAttribute("khachHang");
	KhachHang khachHang = null;
	if (objKH != null)
		khachHang = (KhachHang) objKH;
	if (khachHang == null) {
		response.sendRedirect(url + "/index.jsp");
	} else {
		String email = request.getAttribute("email") + "";
		email = (email.equals("null")) ? "" : email;
		String baoLoi = request.getAttribute("baoLoi") + "";
		baoLoi = (baoLoi.equals("null")) ? "" : baoLoi;
	
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("	<!-- Section: Design Block -->\r\n");
      out.write("	<section class=\"vh-100 text-center\"\r\n");
      out.write("		style=\"background-image: url(");
      out.print(url);
      out.write("/img/background.jpg);\">\r\n");
      out.write("		<div class=\"container py-5 h-100\">\r\n");
      out.write("			<div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n");
      out.write("				<div class=\"col col-xl-12\">\r\n");
      out.write("					<div class=\"card\" style=\"border-radius: 1rem;\">\r\n");
      out.write("						<form id=\"frmcheckmail\" action=\"");
      out.print(url);
      out.write("/khach-hang\" method=\"post\">\r\n");
      out.write("							<input type=\"hidden\" name=\"hanhDong\" value=\"create-new-pass\">\r\n");
      out.write("							<div class=\"card d-flex justify-content-center align-items-center p-5 text-center\">\r\n");
      out.write("								<!-- Logo -->\r\n");
      out.write("								<div class=\"col-12 col-md-8 col-lg-8 col-xl-10\">\r\n");
      out.write("									<div class=\"row mt-4\">\r\n");
      out.write("										<div class=\"form-outline\">\r\n");
      out.write("											<img src=\"");
      out.print(url);
      out.write("/img/logopt.png\" alt=\"Dấu tích thành công\"\r\n");
      out.write("												style=\"border-radius: 50%; max-width: 30%; height: auto;\" class=\"img-fluid\" />\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("									<!-- Input Email -->\r\n");
      out.write("									<div class=\"row d-flex justify-content-center align-items-center mt-5 mb-4\">\r\n");
      out.write("										<div class=\"col-xl-6\">\r\n");
      out.write("											<div class=\"border border-gray rounded-5 shadow p-5\">\r\n");
      out.write("												<ul class=\"m-0 p-0\">\r\n");
      out.write("													<li class=\"pb-2\" style=\"list-style: none\"><h5 class=\"text-start\">\r\n");
      out.write("															Đặt mật khẩu mới cho tài khoản của bạn.</h5>\r\n");
      out.write("															<input type=\"hidden\" name=\"email\" value=\"");
      out.print(email);
      out.write("\"></li>\r\n");
      out.write("												</ul>\r\n");
      out.write("												<ul class=\"m-0 p-0\">\r\n");
      out.write("													<li class=\"pb-4\" style=\"list-style: none\">\r\n");
      out.write("														<div class=\"text-start mt-3\">\r\n");
      out.write("															<span class=\"text-start mt-5\" style=\"color: red\">");
      out.print(baoLoi);
      out.write("</span>\r\n");
      out.write("														</div>\r\n");
      out.write("														<div class=\"form-outline\" data-mdb-input-init>\r\n");
      out.write("															<input type=\"password\" id=\"matKhauMoi\" name=\"matKhauMoi\"\r\n");
      out.write("																class=\"form-control form-control-lg\" required=\"required\"\r\n");
      out.write("																onkeyup=\"kiemTraNewPassword()\" />\r\n");
      out.write("															<label class=\"form-label\" for=\"matKhauMoi\">Mật khẩu mới</label>\r\n");
      out.write("														</div>\r\n");
      out.write("													</li>\r\n");
      out.write("													<li class=\"pb-4\" style=\"list-style: none\">\r\n");
      out.write("														<div class=\"form-outline\" data-mdb-input-init>\r\n");
      out.write("															<input type=\"password\" id=\"matKhauMoiNhapLai\" name=\"matKhauMoiNhapLai\"\r\n");
      out.write("																class=\"form-control form-control-lg\" required=\"required\"\r\n");
      out.write("																onkeyup=\"kiemTraNewPassword()\" />\r\n");
      out.write("															<label class=\"form-label\" for=\"matKhauMoiNhapLai\">Nhập lại mật khẩu</label>\r\n");
      out.write("														</div>\r\n");
      out.write("													</li>\r\n");
      out.write("												</ul>\r\n");
      out.write("												<ul class=\"m-0 p-0\">\r\n");
      out.write("													<li class=\"text-end\" style=\"list-style: none\">\r\n");
      out.write("														<button type=\"submit\" class=\"btn btn-primary\" data-mdb-ripple-init>Lưu\r\n");
      out.write("															mật khẩu</button>\r\n");
      out.write("													</li>\r\n");
      out.write("												</ul>\r\n");
      out.write("											</div>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	function kiemTraNewPassword() {\r\n");
      out.write("		var matKhauMoi = document.getElementById(\"matKhauMoi\").value;\r\n");
      out.write("		var matKhauMoiNhapLai = document.getElementById(\"matKhauMoiNhapLai\").value;\r\n");
      out.write("\r\n");
      out.write("		if (matKhauMoi != matKhauMoiNhapLai) {\r\n");
      out.write("			document.getElementById(\"msger\").textContent = \"  Mật khẩu không khớp!\";\r\n");
      out.write("			return false;\r\n");
      out.write("		} else {\r\n");
      out.write("			document.getElementById(\"msger\").textContent = \"\";\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("	<!-- MDB -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.print(url);
      out.write("/js/mdb.umd.min.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	import { Input, initMDB } from \"mdb-ui-kit\";\r\n");
      out.write("	initMDB({ Input });\r\n");
      out.write("	import { Ripple, initMDB } from \"mdb-ui-kit\";\r\n");
      out.write("	initMDB({ Ripple });\r\n");
      out.write("</script>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
