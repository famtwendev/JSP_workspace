/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-03-29 07:21:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.KhachHang;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.KhachHang;

public final class dangnhap_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("model.KhachHang");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Fam Twen | Đăng nhập</title>\r\n");
      out.write("<!-- MDB icon -->\r\n");
      out.write("<link rel=\"icon\" href=\"img/mdb-favicon.ico\" type=\"image/x-icon\" />\r\n");
      out.write("<!-- Font Awesome -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" />\r\n");
      out.write("<!-- Google Fonts Roboto -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap\" />\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".divider:after, .divider:before {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	flex: 1;\r\n");
      out.write("	height: 3px;\r\n");
      out.write("	background: #B5B5B5;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");

String url = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
		+ request.getContextPath();

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(url);
      out.write("/css/mdb.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write(".red {\r\n");
      out.write("	color: red;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	Object objKH = session.getAttribute("khachHang");
	KhachHang khachHang = null;
	if (objKH != null)
		khachHang = (KhachHang) objKH;
	if (khachHang != null) {
		response.sendRedirect("../index.jsp");
	} else {
	
      out.write("\r\n");
      out.write("	<section class=\"vh-100\" style=\"background-image: url(");
      out.print(url);
      out.write("/img/background.jpg);\">\r\n");
      out.write("		");

		String baoLoi = request.getAttribute("baoLoi") + "";
		baoLoi = (baoLoi.equals("null")) ? "" : baoLoi;
		
      out.write("\r\n");
      out.write("		<div class=\"container py-5 h-100\">\r\n");
      out.write("			<div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n");
      out.write("				<div class=\"col col-xl-10\">\r\n");
      out.write("					<div class=\"card\" style=\"border-radius: 1rem;\">\r\n");
      out.write("						<!-- Chia cột -->\r\n");
      out.write("						<div class=\"row g-0\">\r\n");
      out.write("							<!-- Phần ảnh -->\r\n");
      out.write("							<div class=\"col-md-6 col-lg-5 d-none d-md-block\">\r\n");
      out.write("								<img src=\"");
      out.print(url);
      out.write("/img/mountain.jpg\" alt=\"login form\" class=\"img-fluid\"\r\n");
      out.write("									style=\"border-radius: 1rem 0 0 1rem;\" />\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\r\n");
      out.write("								<div class=\"card-body p-4 p-lg-4 text-black\">\r\n");
      out.write("\r\n");
      out.write("									<!-- Phần FORM  -->\r\n");
      out.write("									<form  action=\"");
      out.print(url);
      out.write("/khach-hang\" method=\"POST\">\r\n");
      out.write("										<!-- Gui attribute cho server -->\r\n");
      out.write("										<input type=\"hidden\" name=\"hanhDong\" value=\"dang-nhap\">\r\n");
      out.write("										<div class=\"row justify-content-center\">\r\n");
      out.write("											<img alt=\"logo\" src=\"");
      out.print(url);
      out.write("/img/logopt.png\"\r\n");
      out.write("												style=\"border-radius: 50%; max-width: 20%; height: auto;\">\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<h4 class=\"fw-normal mb-0 pb-3\" style=\"letter-spacing: 1px\">ĐĂNG NHẬP</h4>\r\n");
      out.write("\r\n");
      out.write("										<span class=\"red mb-3\"> ");
      out.print(baoLoi);
      out.write("</span>\r\n");
      out.write("\r\n");
      out.write("										<div data-mdb-input-init class=\"form-outline mb-4\">\r\n");
      out.write("											<input type=\"text\" id=\"tenDangNhap\" class=\"form-control form-control-lg\"\r\n");
      out.write("												name=\"tenDangNhap\" />\r\n");
      out.write("											<label class=\"form-label\" for=\"tenDangNhap\"> <i class=\"fas fa-user\"></i>\r\n");
      out.write("												Tên đăng nhập\r\n");
      out.write("											</label>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"form-outline mb-4\" data-mdb-input-init>\r\n");
      out.write("											<input type=\"password\" id=\"matKhau\" class=\"form-control form-control-lg\"\r\n");
      out.write("												name=\"matKhau\" />\r\n");
      out.write("											<label class=\"form-label\" for=\"matKhau\"> <i class=\"fas fa-key\"></i> Mật\r\n");
      out.write("												khẩu\r\n");
      out.write("											</label>\r\n");
      out.write("\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"d-flex justify-content-around align-items-center mb-4\">\r\n");
      out.write("											<!-- Checkbox -->\r\n");
      out.write("											<div class=\"form-check\">\r\n");
      out.write("												<input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"form1Example3\"\r\n");
      out.write("													checked />\r\n");
      out.write("												<label class=\"form-check-label\" for=\"form1Example3\">Ghi nhớ tài khoản\r\n");
      out.write("												</label>\r\n");
      out.write("											</div>\r\n");
      out.write("											<a class=\"text-end\" href=\"");
      out.print(url);
      out.write("/KhachHang/checkemail.jsp\">Quên mật khẩu?</a>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("										<!-- Submit button -->\r\n");
      out.write("										<button type=\"submit\" class=\"btn btn-primary btn-lg btn-block\">Đăng\r\n");
      out.write("											nhập</button>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"divider d-flex align-items-center my-4\">\r\n");
      out.write("											<p class=\"text-center fw-bold mx-3 mb-0 text-muted\">HOẶC</p>\r\n");
      out.write("										</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("										<a class=\"btn btn-primary btn-lg btn-block\" style=\"background-color: #dd4b39\"\r\n");
      out.write("											href=\"#!\" role=\"button\">\r\n");
      out.write("											<i class=\"fab fa-google me-2\"></i>Đăng nhập với Google\r\n");
      out.write("										</a>\r\n");
      out.write("\r\n");
      out.write("										<a class=\"btn btn-primary btn-lg btn-block\" style=\"background-color: #3b5998\"\r\n");
      out.write("											href=\"https://www.facebook.com/\" role=\"button\">\r\n");
      out.write("											<i class=\"fab fa-facebook-f me-2\"></i>Đăng nhập với Facebook\r\n");
      out.write("										</a>\r\n");
      out.write("\r\n");
      out.write("										<div class=\"text-center mt-4\">\r\n");
      out.write("											<h6>\r\n");
      out.write("												Bạn lần đầu biết đến chúng tôi ?\r\n");
      out.write("												<a href=\"./dangky.jsp\">Đăng ký</a>\r\n");
      out.write("											</h6>\r\n");
      out.write("										</div>\r\n");
      out.write("									</form>\r\n");
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	<!-- MDB -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.print(url);
      out.write("/js/mdb.umd.min.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">// Initialization for ES Users\r\n");
      out.write("    import { Input, initMDB } from \"mdb-ui-kit\";\r\n");
      out.write("\r\n");
      out.write("    initMDB({ Input });\r\n");
      out.write("</script>\r\n");
      out.write("	");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
